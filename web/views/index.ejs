<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=1600, initial-scale=1.0">
    <title>Main</title>
    <link rel="stylesheet" href="/css/bulma.min.css">
    <script>
        function getCokie(cname) {
            let name = cname + "=";
            let cookie = decodeURIComponent(document.cookie);
            let ca = cookie.split(';');
            for (let i = 0; i < ca.length; i++) {
                let c = ca[i];
                while (c.charAt(0) == ' ') {
                    c = c.substring(1);
                }
                if (c.indexOf(name) == 0) {
                    return c.substring(name.length, c.length);
                }
            }
            return "";
        }
    </script>
    <script type="module">
        import { createApp } from '/script/petite-vue.es.js'
        function App() {
            //console.log(getCokie("active_sheet"));
            const prev_act_sh = getCokie("active_sheet");
            let app_ret = {
                menu_ent: [{ name: 'main', active: true }, { name: 'devices', active: false }, { name: 'users', active: false }],
                cur_active: 0,
                sel_men_ent(id) {
                    this.menu_ent[this.cur_active].active = false;
                    this.menu_ent[this.cur_active = id].active = true;
                    document.cookie = "active_sheet=" + id + ";max-age=" + 60 * 60 + ";SameSite=Lax";
                }
            }
            app_ret.sel_men_ent(prev_act_sh ? prev_act_sh : 0)
            return app_ret;
        }
        function DeviceManage() {
            return {
                creating_dev: false,
                switch_new_dev_window() {
                    this.creating_dev = !this.creating_dev;
                },
                dev_ls: [{ name: 'Device1', type: 'Temp.Sensor', users: ['admin', 'user1'], edit: false },
                { name: 'Device2', type: '', users: [], edit: false },
                { name: 'Device3', type: 'relay', users: ['user2'], edit: false }]
            }
        }
        function Device(dev_data) {
            return {
                $template: '#dev-data-row',
                dev_data
                // name:_dev_data.name,
                // type:_dev_data.type,
                // users:_dev_data.users,
                // edit_mode:false
            }
        }
        function UserManage() {
            async function get_users() {
                const res = await fetch(`/api/get_users`, {
                    headers: {
                        "Authorization": "Bearer test-token",
                    }
                })
                const answer = await res.json()
                if(answer.error) {
                    console.log(answer)
                }
                else {
                    this.user_ls = answer;
                }                
            }
            // get_users();
            return {
                user_ls: [],
                get_users:get_users,
            }
        }
        createApp({ App, Device, DeviceManage, UserManage}).mount()
    </script>
    <template id="dev-data-row">
        <td>{{dev_data.name}}</td>
        <td>{{dev_data.type}}</td>
        <td>
            <div class="tags">
                <span class="tag" v-for="user of dev_data.users">{{user}}</span>
            </div>
        </td>
        <td>
            <div class="buttons has-addons are-small">
                <button class="button" :class="{'is-primary':dev_data.edit}" @click="dev_data.edit=!dev_data.edit">edit</button>
                <button class="button is-danger is-light is-outlined">delete</button>
            </div>
        </td>


    </template>
</head>
<style>
    .dot {
        background-color: green;
        border-radius: 50%;
        width: 0.5rem;
        height: 0.5rem;
        display: inline-block;
    }
    .y2m-hr {
        width:20rem;
        height:0.5rem; 
        border-radius: 0.25rem;
        background-color:var(--bulma-link);
    }
</style>
<body>
    <div class="container is-fullhd is-flex" v-scope="App()">
        <aside class="menu">
            <ul class="menu-list">
                <li v-for="(entry, idx) of menu_ent" @click="sel_men_ent(idx)">
                    <a :class="{'is-active':entry.active}">{{entry.name}}</a>
                </li>
            </ul>
        </aside>
        <div class="container" id="view">
            <section class="section" :class="{hide:!menu_ent[0].active}">
                <h1 class="title hero">System View</h1>
                <hr class="y2m-hr">
                <div class="columns">
                    <div class="column"><div class="box ">yandex2mqtt: <div class="dot mr-1"></div>running</div></div>
                    <div class="column"><div class="box ">mqtt-broker: <div class="dot mr-1"></div>connected</div></div>
                </div>
                
            </section>
            <section :class="{hide:!menu_ent[1].active}" class="section" id="devices" v-scope="DeviceManage()">
                <h1 class="title">Devices</h1>
                <hr class="y2m-hr">
                <table class="table is-hoverable is-fullwidth">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Type</th>
                            <th>Users</th>
                            <th style="width:15%"></th>
                        </tr>
                    </thead>
                    <tbody>
                        <template v-for="dev of dev_ls" :key="dev.name">
                            <tr v-scope="Device(dev)"></tr>
                            <tr>
                                <td v-if="dev.edit" colspan="4">
                                    <div class="field">
                                        <label class="label">Name</label>
                                        <div class="control">
                                            <input type="text" class="input">
                                        </div>
                                    </div>
                                    <div class="field">
                                        <label class="label">Type</label>
                                        <div class="control">
                                            <div class="select">
                                                <select>
                                                    <option>sensor</option>
                                                    <option>relay</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        </template>
                    </tbody>
                </table>
                <%- include('dev_modal') %>                
                <button class="button" @click="switch_new_dev_window()">Add device</button>
            </section>
            <section :class="{hide:!menu_ent[2].active}" class="section" v-scope="UserManage()">
                <h1 class="title hero">Users</h1>
                <hr class="y2m-hr">
                <table class="table is-fullwidth" @mounted="get_users()">
                    <thead>
                        <tr>
                            <th>Login</th>
                            <th>Name</th>
                            <th style="width:15%"></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="user of user_ls">
                            <td>
                                <input v-if="user.edit" type="text" class="input is-small" :size="user.login.length"
                                    v-model="user.login">
                                <span v-else>{{user.login}}</span>
                            </td>
                            <td>
                                <span v-if="user.edit"><input type="text" class="input is-small"
                                        :size="user.name.length" v-model="user.name"></span>
                                <span v-else>{{user.name}}</span>
                            </td>
                            <td>
                                <div class="buttons has-addons are-small">
                                    <button class="button" @click="user.edit=!user.edit"
                                        :class="{'is-primary':user.edit}">edit</button>
                                    <button class="button is-danger is-light is-outlined">delete</button>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </section>
        </div>

    </div>
</body>

</html>

<style>
    .hide {
        display: none;
    }
</style>